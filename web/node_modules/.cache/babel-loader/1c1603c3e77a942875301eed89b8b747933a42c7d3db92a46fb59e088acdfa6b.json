{"ast":null,"code":"var _jsxFileName = \"/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/pages/MarketPage/components/BestItemsSection.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { keepPreviousData, useQuery } from '@tanstack/react-query';\nimport styled from 'styled-components';\nimport ItemCard from './ItemCard';\nimport { getProducts } from '../../../api/products';\nimport { ReactComponent as Spinner } from '../../../assets/images/ui/spinner.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 4;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\n/**\n * 베스트 상품은 무조건 데이터를 4개 불러온 다음, 각각의 화면에 맞게 개수를 다르게 해서 보여줍니다.\n * 데스크톱에서는 최대 4개, 태블릿 화면에서는 2개, 모바일 화면에서는 1개만 노출합니다.\n * 화면 크기가 중간에 달라지더라도 데이터를 추가로 불러오지 않아도 되도록 했습니다.\n */\n_c = Container;\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 32px;\n\n  @media ${({\n  theme\n}) => theme.mediaQuery.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n\n    & :nth-child(3),\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media ${({\n  theme\n}) => theme.mediaQuery.mobile} {\n    grid-template-columns: repeat(1, 1fr);\n\n    & :nth-child(2) {\n      display: none;\n    }\n  }\n`;\n_c2 = Content;\nconst Title = styled.h2`\n  color: #111827;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: normal;\n`;\n_c3 = Title;\nconst SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 32px;\n`;\n_c4 = SpinnerContainer;\nconst StyledSpinner = styled(Spinner)`\n  width: 64px;\n  height: 64px;\n  color: ${({\n  theme\n}) => theme.colors.gray[1]};\n`;\n_c5 = StyledSpinner;\nfunction BestItemsSection() {\n  _s();\n  const {\n    data,\n    isFetching\n  } = useQuery({\n    queryKey: ['products', 'best'],\n    queryFn: () => getProducts({\n      orderBy: 'favorite',\n      page: 1,\n      pageSize: PAGE_SIZE\n    }),\n    refetchInterval: 60 * 1000 // 1분마다 데이터를 새로 받아온다\n  });\n\n  // 처음 로딩할 때만 스피너 보여주기\n  if (!data && isFetching) {\n    return /*#__PURE__*/_jsxDEV(SpinnerContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 베스트 아이템이 없다면 아무것도 보여주지 않습니다.\n  if (!data || data.list.length === 0) return null;\n  const items = data.list;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uBCA0\\uC2A4\\uD2B8 \\uC0C1\\uD488\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/items/${item.id}`,\n        children: /*#__PURE__*/_jsxDEV(ItemCard, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(BestItemsSection, \"vTpe54SP7yC6aTFk20uXLLSLMRU=\", false, function () {\n  return [useQuery];\n});\n_c6 = BestItemsSection;\nexport default BestItemsSection;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"SpinnerContainer\");\n$RefreshReg$(_c5, \"StyledSpinner\");\n$RefreshReg$(_c6, \"BestItemsSection\");","map":{"version":3,"names":["React","Link","keepPreviousData","useQuery","styled","ItemCard","getProducts","ReactComponent","Spinner","jsxDEV","_jsxDEV","PAGE_SIZE","Container","div","_c","Content","theme","mediaQuery","tablet","mobile","_c2","Title","h2","_c3","SpinnerContainer","_c4","StyledSpinner","colors","gray","_c5","BestItemsSection","_s","data","isFetching","queryKey","queryFn","orderBy","page","pageSize","refetchInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","list","length","items","map","item","to","id","_c6","$RefreshReg$"],"sources":["/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/pages/MarketPage/components/BestItemsSection.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { keepPreviousData, useQuery } from '@tanstack/react-query';\nimport styled from 'styled-components';\nimport ItemCard from './ItemCard';\nimport { getProducts } from '../../../api/products';\nimport { ReactComponent as Spinner } from '../../../assets/images/ui/spinner.svg';\n\nconst PAGE_SIZE = 4;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\n/**\n * 베스트 상품은 무조건 데이터를 4개 불러온 다음, 각각의 화면에 맞게 개수를 다르게 해서 보여줍니다.\n * 데스크톱에서는 최대 4개, 태블릿 화면에서는 2개, 모바일 화면에서는 1개만 노출합니다.\n * 화면 크기가 중간에 달라지더라도 데이터를 추가로 불러오지 않아도 되도록 했습니다.\n */\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 32px;\n\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\n    grid-template-columns: repeat(2, 1fr);\n\n    & :nth-child(3),\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\n    grid-template-columns: repeat(1, 1fr);\n\n    & :nth-child(2) {\n      display: none;\n    }\n  }\n`;\n\nconst Title = styled.h2`\n  color: #111827;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: normal;\n`;\n\nconst SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 32px;\n`;\n\nconst StyledSpinner = styled(Spinner)`\n  width: 64px;\n  height: 64px;\n  color: ${({ theme }) => theme.colors.gray[1]};\n`;\n\nfunction BestItemsSection() {\n  const { data, isFetching } = useQuery({\n    queryKey: ['products', 'best'],\n    queryFn: () =>\n      getProducts({\n        orderBy: 'favorite',\n        page: 1,\n        pageSize: PAGE_SIZE,\n      }),\n    refetchInterval: 60 * 1000, // 1분마다 데이터를 새로 받아온다\n  });\n\n  // 처음 로딩할 때만 스피너 보여주기\n  if (!data && isFetching) {\n    return (\n      <SpinnerContainer>\n        <StyledSpinner />\n      </SpinnerContainer>\n    );\n  }\n\n  // 베스트 아이템이 없다면 아무것도 보여주지 않습니다.\n  if (!data || data.list.length === 0) return null;\n\n  const items = data.list;\n\n  return (\n    <Container>\n      <Title>베스트 상품</Title>\n      <Content>\n        {items.map((item) => (\n          <Link to={`/items/${item.id}`}>\n            <ItemCard item={item} key={item.id} />\n          </Link>\n        ))}\n      </Content>\n    </Container>\n  );\n}\n\nexport default BestItemsSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}