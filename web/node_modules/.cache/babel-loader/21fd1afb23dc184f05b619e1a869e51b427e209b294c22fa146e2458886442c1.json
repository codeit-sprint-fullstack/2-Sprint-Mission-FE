{"ast":null,"code":"// 날짜 관련 Util Functions\n\n// Javascript에서 날짜를 다룰 때는 library 사용을 추천해요.\n// 이번 프로젝트에서는 가장 많이 사용되면서도 가벼운 \"date-fns\" 패키지를 사용해 볼게요.\n// 참고 링크: https://date-fns.org/\n\nimport { format, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds } from \"date-fns\";\n\n// updatedAt 표시: Date string을 현재 시간과 비교한 형식으로 변환해주는 함수\n// 7일 이내까지는 시간이 얼마나 흘렀는지를 분, 시간, 일 단위로 나타내고, 그보다 오래된 날짜는 포맷팅한 문자열로 리턴함\nexport const formatUpdatedAt = dateString => {\n  const date = new Date(dateString); // 입력된 날짜 문자열을 Date 객체로 변환\n  const now = new Date(); // 현재 기준 Date 객체 생성\n\n  const diffInDays = differenceInDays(now, date); // 현재 시간과 입력된 날짜의 차이를 일(day) 단위로 계산\n  const diffInHours = differenceInHours(now, date); // 현재 시간과 입력된 날짜의 차이를 시간(hour) 단위로 계산\n  const diffInMinutes = differenceInMinutes(now, date); // 현재 시간과 입력된 날짜의 차이를 분(minute) 단위로 계산\n  const diffInSeconds = differenceInSeconds(now, date); // 현재 시간과 입력된 날짜의 차이를 초(second) 단위로 계산\n\n  if (diffInSeconds < 60) {\n    return \"방금 전\"; // 차이가 1분 미만인 경우 \"방금 전\" 형식으로 출력\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes}분 전`; // 차이가 1시간 미만인 경우 \"N분 전\" 형식으로 출력\n  } else if (diffInHours < 24) {\n    return `${diffInHours}시간 전`; // 차이가 1일 미만인 경우 \"N시간 전\" 형식으로 출력\n  } else if (diffInDays < 7) {\n    return `${diffInDays}일 전`; // 차이가 7일 이내인 경우 \"N일 전\" 형식으로 출력\n  } else {\n    // 차이가 7일 이상인 경우 포맷팅된 날짜 출력\n    return format(date, \"yyyy.MM.dd hh:mm a\");\n  }\n};\n\n// 날짜 포맷팅 참고:\n// - 대문자 'M'은 month, 소문자 'm'은 minute을 뜻해요.\n// - 'MM'은 month를 두 자리 숫자로 나타낸 것, 'M'은 한자리 숫자로 나타낸 것(예: 5월을 '05'가 아닌 '5'로 출력)\n// - 대문자 'HH'는 24시 체계 (예: 14시), 소문자 'hh'는 12시 체계 (예: 2시)\n// - 소문자 'hh'를 사용해 시간을 나타낼 경우, 'a'를 추가해 AM/PM까지 함께 표기해 주세요. (예: \"yyyy.MM.dd hh:mm a\")","map":{"version":3,"names":["format","differenceInDays","differenceInHours","differenceInMinutes","differenceInSeconds","formatUpdatedAt","dateString","date","Date","now","diffInDays","diffInHours","diffInMinutes","diffInSeconds"],"sources":["/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/utils/dateUtils.js"],"sourcesContent":["// 날짜 관련 Util Functions\n\n// Javascript에서 날짜를 다룰 때는 library 사용을 추천해요.\n// 이번 프로젝트에서는 가장 많이 사용되면서도 가벼운 \"date-fns\" 패키지를 사용해 볼게요.\n// 참고 링크: https://date-fns.org/\n\nimport {\n  format,\n  differenceInDays,\n  differenceInHours,\n  differenceInMinutes,\n  differenceInSeconds,\n} from \"date-fns\";\n\n// updatedAt 표시: Date string을 현재 시간과 비교한 형식으로 변환해주는 함수\n// 7일 이내까지는 시간이 얼마나 흘렀는지를 분, 시간, 일 단위로 나타내고, 그보다 오래된 날짜는 포맷팅한 문자열로 리턴함\nexport const formatUpdatedAt = (dateString) => {\n  const date = new Date(dateString); // 입력된 날짜 문자열을 Date 객체로 변환\n  const now = new Date(); // 현재 기준 Date 객체 생성\n\n  const diffInDays = differenceInDays(now, date); // 현재 시간과 입력된 날짜의 차이를 일(day) 단위로 계산\n  const diffInHours = differenceInHours(now, date); // 현재 시간과 입력된 날짜의 차이를 시간(hour) 단위로 계산\n  const diffInMinutes = differenceInMinutes(now, date); // 현재 시간과 입력된 날짜의 차이를 분(minute) 단위로 계산\n  const diffInSeconds = differenceInSeconds(now, date); // 현재 시간과 입력된 날짜의 차이를 초(second) 단위로 계산\n\n  if (diffInSeconds < 60) {\n    return \"방금 전\"; // 차이가 1분 미만인 경우 \"방금 전\" 형식으로 출력\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes}분 전`; // 차이가 1시간 미만인 경우 \"N분 전\" 형식으로 출력\n  } else if (diffInHours < 24) {\n    return `${diffInHours}시간 전`; // 차이가 1일 미만인 경우 \"N시간 전\" 형식으로 출력\n  } else if (diffInDays < 7) {\n    return `${diffInDays}일 전`; // 차이가 7일 이내인 경우 \"N일 전\" 형식으로 출력\n  } else {\n    // 차이가 7일 이상인 경우 포맷팅된 날짜 출력\n    return format(date, \"yyyy.MM.dd hh:mm a\");\n  }\n};\n\n// 날짜 포맷팅 참고:\n// - 대문자 'M'은 month, 소문자 'm'은 minute을 뜻해요.\n// - 'MM'은 month를 두 자리 숫자로 나타낸 것, 'M'은 한자리 숫자로 나타낸 것(예: 5월을 '05'가 아닌 '5'로 출력)\n// - 대문자 'HH'는 24시 체계 (예: 14시), 소문자 'hh'는 12시 체계 (예: 2시)\n// - 소문자 'hh'를 사용해 시간을 나타낼 경우, 'a'를 추가해 AM/PM까지 함께 표기해 주세요. (예: \"yyyy.MM.dd hh:mm a\")\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA,SACEA,MAAM,EACNC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,QACd,UAAU;;AAEjB;AACA;AACA,OAAO,MAAMC,eAAe,GAAIC,UAAU,IAAK;EAC7C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC,CAAC,CAAC;EACnC,MAAMG,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC,CAAC,CAAC;;EAExB,MAAME,UAAU,GAAGT,gBAAgB,CAACQ,GAAG,EAAEF,IAAI,CAAC,CAAC,CAAC;EAChD,MAAMI,WAAW,GAAGT,iBAAiB,CAACO,GAAG,EAAEF,IAAI,CAAC,CAAC,CAAC;EAClD,MAAMK,aAAa,GAAGT,mBAAmB,CAACM,GAAG,EAAEF,IAAI,CAAC,CAAC,CAAC;EACtD,MAAMM,aAAa,GAAGT,mBAAmB,CAACK,GAAG,EAAEF,IAAI,CAAC,CAAC,CAAC;;EAEtD,IAAIM,aAAa,GAAG,EAAE,EAAE;IACtB,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,MAAM,IAAID,aAAa,GAAG,EAAE,EAAE;IAC7B,OAAQ,GAAEA,aAAc,KAAI,CAAC,CAAC;EAChC,CAAC,MAAM,IAAID,WAAW,GAAG,EAAE,EAAE;IAC3B,OAAQ,GAAEA,WAAY,MAAK,CAAC,CAAC;EAC/B,CAAC,MAAM,IAAID,UAAU,GAAG,CAAC,EAAE;IACzB,OAAQ,GAAEA,UAAW,KAAI,CAAC,CAAC;EAC7B,CAAC,MAAM;IACL;IACA,OAAOV,MAAM,CAACO,IAAI,EAAE,oBAAoB,CAAC;EAC3C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}