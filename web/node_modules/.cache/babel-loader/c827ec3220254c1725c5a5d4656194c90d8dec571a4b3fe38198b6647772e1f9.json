{"ast":null,"code":"import axiosLib from \"axios\";\nimport NProgress from \"nprogress\";\nimport { clearTokens, getTokens, setTokens } from \"../utils/authToken\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nfunction omitEmptyParams(params) {\n  return Object.fromEntries(Object.entries(params).filter(([_, value]) => value !== \"\" || typeof value === \"undefined\"));\n}\nconst axios = axiosLib.create({\n  baseURL: API_BASE_URL,\n  timeout: 1000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxios.interceptors.request.use(function (config) {\n  var _config$params;\n  NProgress.start();\n\n  // 빈 쿼리 파라미터는 생략해서 보낸다.\n  // 예를 들면 keyword 값이 \"\"인 경우 `keyword=`라는 쿼리를 보내지 않는다.\n  config.params = omitEmptyParams((_config$params = config.params) !== null && _config$params !== void 0 ? _config$params : {});\n  const {\n    accessToken\n  } = getTokens();\n  if (accessToken) {\n    config.headers = {\n      ...config.headers,\n      Authorization: `Bearer ${accessToken}`\n    };\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  var _response$data, _response$data2;\n  NProgress.done();\n  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.accessToken && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.refreshToken) {\n    const {\n      accessToken,\n      refreshToken\n    } = response.data;\n    setTokens({\n      accessToken,\n      refreshToken\n    });\n  }\n  return response;\n}, function (error) {\n  var _error$response, _error$response2;\n  NProgress.done();\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    clearTokens();\n  }\n  const responseData = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n  if (!!(responseData !== null && responseData !== void 0 && responseData.message)) {\n    return Promise.reject(new Error(responseData.message));\n  }\n  return Promise.reject(new Error(\"알 수 없는 오류입니다\"));\n});\nexport default axios;","map":{"version":3,"names":["axiosLib","NProgress","clearTokens","getTokens","setTokens","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","omitEmptyParams","params","Object","fromEntries","entries","filter","_","value","axios","create","baseURL","timeout","headers","interceptors","request","use","config","_config$params","start","accessToken","Authorization","error","Promise","reject","response","_response$data","_response$data2","done","data","refreshToken","_error$response","_error$response2","status","responseData","message","Error"],"sources":["/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/api/axios.js"],"sourcesContent":["import axiosLib from \"axios\";\nimport NProgress from \"nprogress\";\nimport { clearTokens, getTokens, setTokens } from \"../utils/authToken\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nfunction omitEmptyParams(params) {\n  return Object.fromEntries(\n    Object.entries(params).filter(([_, value]) => value !== \"\" || typeof value === \"undefined\")\n  );\n}\n\nconst axios = axiosLib.create({\n  baseURL: API_BASE_URL,\n  timeout: 1000,\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\naxios.interceptors.request.use(\n  function (config) {\n    NProgress.start();\n\n    // 빈 쿼리 파라미터는 생략해서 보낸다.\n    // 예를 들면 keyword 값이 \"\"인 경우 `keyword=`라는 쿼리를 보내지 않는다.\n    config.params = omitEmptyParams(config.params ?? {});\n\n    const { accessToken } = getTokens();\n    if (accessToken) {\n      config.headers = {\n        ...config.headers,\n        Authorization: `Bearer ${accessToken}`,\n      };\n    }\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  function (response) {\n    NProgress.done();\n    if (response.data?.accessToken && response.data?.refreshToken) {\n      const { accessToken, refreshToken } = response.data;\n      setTokens({ accessToken, refreshToken });\n    }\n    return response;\n  },\n  function (error) {\n    NProgress.done();\n    if (error.response?.status === 401) {\n      clearTokens();\n    }\n\n    const responseData = error.response?.data;\n    if (!!responseData?.message) {\n      return Promise.reject(new Error(responseData.message));\n    }\n\n    return Promise.reject(new Error(\"알 수 없는 오류입니다\"));\n  }\n);\n\nexport default axios;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,OAAO;AAC5B,OAAOC,SAAS,MAAM,WAAW;AACjC,SAASC,WAAW,EAAEC,SAAS,EAAEC,SAAS,QAAQ,oBAAoB;AAEtE,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC/B,OAAOC,MAAM,CAACC,WAAW,CACvBD,MAAM,CAACE,OAAO,CAACH,MAAM,CAAC,CAACI,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,KAAK,CAAC,KAAKA,KAAK,KAAK,EAAE,IAAI,OAAOA,KAAK,KAAK,WAAW,CAC5F,CAAC;AACH;AAEA,MAAMC,KAAK,GAAGjB,QAAQ,CAACkB,MAAM,CAAC;EAC5BC,OAAO,EAAEd,YAAY;EACrBe,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;AAEFJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAUC,MAAM,EAAE;EAAA,IAAAC,cAAA;EAChBzB,SAAS,CAAC0B,KAAK,CAAC,CAAC;;EAEjB;EACA;EACAF,MAAM,CAACf,MAAM,GAAGD,eAAe,EAAAiB,cAAA,GAACD,MAAM,CAACf,MAAM,cAAAgB,cAAA,cAAAA,cAAA,GAAI,CAAC,CAAC,CAAC;EAEpD,MAAM;IAAEE;EAAY,CAAC,GAAGzB,SAAS,CAAC,CAAC;EACnC,IAAIyB,WAAW,EAAE;IACfH,MAAM,CAACJ,OAAO,GAAG;MACf,GAAGI,MAAM,CAACJ,OAAO;MACjBQ,aAAa,EAAG,UAASD,WAAY;IACvC,CAAC;EACH;EACA,OAAOH,MAAM;AACf,CAAC,EACD,UAAUK,KAAK,EAAE;EACf,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDb,KAAK,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC7B,UAAUS,QAAQ,EAAE;EAAA,IAAAC,cAAA,EAAAC,eAAA;EAClBlC,SAAS,CAACmC,IAAI,CAAC,CAAC;EAChB,IAAI,CAAAF,cAAA,GAAAD,QAAQ,CAACI,IAAI,cAAAH,cAAA,eAAbA,cAAA,CAAeN,WAAW,KAAAO,eAAA,GAAIF,QAAQ,CAACI,IAAI,cAAAF,eAAA,eAAbA,eAAA,CAAeG,YAAY,EAAE;IAC7D,MAAM;MAAEV,WAAW;MAAEU;IAAa,CAAC,GAAGL,QAAQ,CAACI,IAAI;IACnDjC,SAAS,CAAC;MAAEwB,WAAW;MAAEU;IAAa,CAAC,CAAC;EAC1C;EACA,OAAOL,QAAQ;AACjB,CAAC,EACD,UAAUH,KAAK,EAAE;EAAA,IAAAS,eAAA,EAAAC,gBAAA;EACfvC,SAAS,CAACmC,IAAI,CAAC,CAAC;EAChB,IAAI,EAAAG,eAAA,GAAAT,KAAK,CAACG,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClCvC,WAAW,CAAC,CAAC;EACf;EAEA,MAAMwC,YAAY,IAAAF,gBAAA,GAAGV,KAAK,CAACG,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI;EACzC,IAAI,CAAC,EAACK,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEC,OAAO,GAAE;IAC3B,OAAOZ,OAAO,CAACC,MAAM,CAAC,IAAIY,KAAK,CAACF,YAAY,CAACC,OAAO,CAAC,CAAC;EACxD;EAEA,OAAOZ,OAAO,CAACC,MAAM,CAAC,IAAIY,KAAK,CAAC,cAAc,CAAC,CAAC;AAClD,CACF,CAAC;AAED,eAAe3B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}