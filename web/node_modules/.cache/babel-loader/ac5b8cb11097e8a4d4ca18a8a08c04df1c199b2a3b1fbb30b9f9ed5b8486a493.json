{"ast":null,"code":"var _jsxFileName = \"/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/pages/MarketPage/components/AllItemsSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { keepPreviousData, useQuery } from \"@tanstack/react-query\";\nimport { getProducts } from \"../../../api/products\";\nimport ItemCard from \"./ItemCard\";\nimport DropdownMenu from \"../../../components/UI/DropdownMenu\";\nimport PaginationBar from \"../../../components/UI/PaginationBar\";\nimport { ReactComponent as SearchIcon } from \"../../../assets/images/icons/ic_search.svg\";\nimport { ReactComponent as Spinner } from \"../../../assets/images/ui/spinner.svg\";\nimport styled from \"styled-components\";\n\n/**\n  피그마 디자인에는 반응형 디자인의 경우 한 줄에 5개, 3개, 2개로 나와있지만\n  페이지당 개수를 작게하려고 (30개씩 불러와야 함)\n  4개 3개 2개로 디자인을 생각하고\n  공배수인 12개씩 불러왔습니다\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 12;\nconst SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 32px;\n`;\n_c = SpinnerContainer;\nconst StyledSpinner = styled(Spinner)`\n  width: 64px;\n  height: 64px;\n  color: ${({\n  theme\n}) => theme.colors.gray[1]};\n`;\n_c2 = StyledSpinner;\nfunction AllItemsSection() {\n  _s();\n  const [orderBy, setOrderBy] = useState(\"recent\");\n  const [page, setPage] = useState(1);\n  const [keyword, setKeyword] = useState(\"\");\n  const {\n    data,\n    isFetching\n  } = useQuery({\n    queryKey: [\"products\", page, orderBy, keyword],\n    queryFn: () => getProducts({\n      orderBy,\n      page,\n      pageSize: PAGE_SIZE,\n      keyword\n    }),\n    placeholderData: keepPreviousData,\n    // 페이지 이동시 데이터 유지\n    refetchInterval: 60 * 1000 // 1분마다 데이터를 새로 받아온다\n  });\n  const handleSearch = e => {\n    setKeyword(e.target.value);\n    /*\n      검색어와 함께 없는 페이지를 요청하는 경우가 있으므로 무조건 1 페이지로 옮긴다\n    */\n    setPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"allItemsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allItemsSectionHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sectionTitle\",\n        children: \"\\uD310\\uB9E4 \\uC911\\uC778 \\uC0C1\\uD488\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registration\",\n        className: \"loginLink button\",\n        children: \"\\uC0C1\\uD488 \\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allItemsSectionHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBarWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBarInput\",\n          placeholder: \"\\uAC80\\uC0C9\\uD560 \\uC0C1\\uD488\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          value: keyword,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        onSortSelection: setOrderBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !data && isFetching &&\n    /*#__PURE__*/\n    // 처음 로딩할 때만 스피너 보여주기\n    _jsxDEV(SpinnerContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allItemsCardSection\",\n        children: data.list.map(item => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/items/${item.id}`,\n          children: /*#__PURE__*/_jsxDEV(ItemCard, {\n            item: item\n          }, `market-item-${item.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginationBarWrapper\",\n        children: /*#__PURE__*/_jsxDEV(PaginationBar, {\n          totalPageNum: Math.ceil(data.totalCount / PAGE_SIZE),\n          activePageNum: page,\n          onPageChange: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(AllItemsSection, \"qo7pezSlu+jbm688P+URrTNrq4o=\", false, function () {\n  return [useQuery];\n});\n_c3 = AllItemsSection;\nexport default AllItemsSection;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SpinnerContainer\");\n$RefreshReg$(_c2, \"StyledSpinner\");\n$RefreshReg$(_c3, \"AllItemsSection\");","map":{"version":3,"names":["React","useState","Link","keepPreviousData","useQuery","getProducts","ItemCard","DropdownMenu","PaginationBar","ReactComponent","SearchIcon","Spinner","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","PAGE_SIZE","SpinnerContainer","div","_c","StyledSpinner","theme","colors","gray","_c2","AllItemsSection","_s","orderBy","setOrderBy","page","setPage","keyword","setKeyword","data","isFetching","queryKey","queryFn","pageSize","placeholderData","refetchInterval","handleSearch","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","placeholder","onChange","onSortSelection","list","map","item","id","totalPageNum","Math","ceil","totalCount","activePageNum","onPageChange","_c3","$RefreshReg$"],"sources":["/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/pages/MarketPage/components/AllItemsSection.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { keepPreviousData, useQuery } from \"@tanstack/react-query\";\nimport { getProducts } from \"../../../api/products\";\nimport ItemCard from \"./ItemCard\";\nimport DropdownMenu from \"../../../components/UI/DropdownMenu\";\nimport PaginationBar from \"../../../components/UI/PaginationBar\";\nimport { ReactComponent as SearchIcon } from \"../../../assets/images/icons/ic_search.svg\";\nimport { ReactComponent as Spinner } from \"../../../assets/images/ui/spinner.svg\";\nimport styled from \"styled-components\";\n\n/**\n  피그마 디자인에는 반응형 디자인의 경우 한 줄에 5개, 3개, 2개로 나와있지만\n  페이지당 개수를 작게하려고 (30개씩 불러와야 함)\n  4개 3개 2개로 디자인을 생각하고\n  공배수인 12개씩 불러왔습니다\n*/\nconst PAGE_SIZE = 12;\n\nconst SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 32px;\n`;\n\nconst StyledSpinner = styled(Spinner)`\n  width: 64px;\n  height: 64px;\n  color: ${({ theme }) => theme.colors.gray[1]};\n`;\n\nfunction AllItemsSection() {\n  const [orderBy, setOrderBy] = useState(\"recent\");\n  const [page, setPage] = useState(1);\n  const [keyword, setKeyword] = useState(\"\");\n\n  const { data, isFetching } = useQuery({\n    queryKey: [\"products\", page, orderBy, keyword],\n    queryFn: () =>\n      getProducts({\n        orderBy,\n        page,\n        pageSize: PAGE_SIZE,\n        keyword,\n      }),\n    placeholderData: keepPreviousData, // 페이지 이동시 데이터 유지\n    refetchInterval: 60 * 1000, // 1분마다 데이터를 새로 받아온다\n  });\n\n  const handleSearch = (e) => {\n    setKeyword(e.target.value);\n    /*\n      검색어와 함께 없는 페이지를 요청하는 경우가 있으므로 무조건 1 페이지로 옮긴다\n    */\n    setPage(1);\n  };\n\n  return (\n    <div className=\"allItemsContainer\">\n      <div className=\"allItemsSectionHeader\">\n        <h2 className=\"sectionTitle\">판매 중인 상품</h2>\n        <Link to=\"/registration\" className=\"loginLink button\">\n          상품 등록하기\n        </Link>\n      </div>\n\n      <div className=\"allItemsSectionHeader\">\n        <div className=\"searchBarWrapper\">\n          <SearchIcon />\n          <input\n            className=\"searchBarInput\"\n            placeholder=\"검색할 상품을 입력해 주세요\"\n            value={keyword}\n            onChange={handleSearch}\n          />\n        </div>\n        <DropdownMenu onSortSelection={setOrderBy} />\n      </div>\n\n      {!data && isFetching && ( // 처음 로딩할 때만 스피너 보여주기\n        <SpinnerContainer>\n          <StyledSpinner />\n        </SpinnerContainer>\n      )}\n      {data && (\n        <>\n          <div className=\"allItemsCardSection\">\n            {data.list.map((item) => (\n              <Link to={`/items/${item.id}`}>\n                <ItemCard item={item} key={`market-item-${item.id}`} />\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"paginationBarWrapper\">\n            <PaginationBar\n              totalPageNum={Math.ceil(data.totalCount / PAGE_SIZE)}\n              activePageNum={page}\n              onPageChange={setPage}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default AllItemsSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}