{"ast":null,"code":"var _jsxFileName = \"/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/pages/auth/SignupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { AuthContainer, LogoHomeLink, Form, AuthSwitch, SubmitButton } from \"./AuthStyles\";\nimport logo from \"../../assets/images/logo/logo.svg\";\nimport InputItem from \"../../components/UI/InputItem\";\nimport SocialLogin from \"./components/SocialLogin\";\nimport PasswordInput from \"./components/PasswordInput\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport SimpleModal from \"../../components/UI/SimpleModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  var _errors$email, _errors$nickname, _errors$password, _errors$passwordConfi;\n  const {\n    user,\n    signup\n  } = useAuth();\n  const navigate = useNavigate();\n  const {\n    register,\n    // 각 입력 필드를 폼에 등록하고 유효성 검사 규칙을 설정하는 함수\n    handleSubmit,\n    // 폼 제출을 처리하는 함수\n    watch,\n    //  폼 필드의 변경을 감지하는 함수\n    trigger,\n    // 폼의 유효성 검사를 트리거하는 함수\n    formState: {\n      errors,\n      isValid\n    } // 폼의 상태를 나타내는 객체\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const onSubmit = async data => {\n    try {\n      await signup(data);\n      navigate(\"/items\");\n    } catch (error) {\n      if (error.message) {\n        setErrorMessage(error.message);\n      }\n    }\n  };\n\n  // 실시간으로 입력값을 감지해야 하는 경우, 폼의 현재 상태를 가져오는 getValues보다 watch 함수를 사용하는 것이 더 적합해요.\n  const password = watch(\"password\");\n  const passwordConfirmation = watch(\"passwordConfirmation\");\n\n  // 비밀번호가 변경될 때마다 비밀번호 확인 필드의 유효성을 검사\n  useEffect(() => {\n    if (password && passwordConfirmation) {\n      trigger(\"passwordConfirmation\");\n    }\n  }, [password, passwordConfirmation, trigger]);\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AuthContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LogoHomeLink, {\n        href: \"/\",\n        \"aria-label\": \"\\uD648\\uC73C\\uB85C \\uC774\\uB3D9\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"\\uD310\\uB2E4\\uB9C8\\uCF13 \\uB85C\\uACE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        id: \"signupForm\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(InputItem, {\n          id: \"email\",\n          label: \"\\uC774\\uBA54\\uC77C\",\n          placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n          register: register(\"email\", {\n            // required에 boolean 값을 넣어줄 수도 있지만, 대신 오류 메세지 문자열을 넣어놓으면 해당 필드를 필수 항목으로 설정함과 동시에 폼 제출 시 입력값이 없을 경우 해당 메시지가 표시돼요.\n            required: \"이메일을 입력해 주세요\",\n            pattern: {\n              value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,\n              message: \"잘못된 이메일 형식입니다\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n          id: \"nickname\",\n          label: \"\\uB2C9\\uB124\\uC784\",\n          placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          error: (_errors$nickname = errors.nickname) === null || _errors$nickname === void 0 ? void 0 : _errors$nickname.message,\n          register: register(\"nickname\", {\n            required: \"닉네임을 입력해 주세요\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n          id: \"password\",\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          register: register(\"password\", {\n            required: \"비밀번호를 입력해 주세요\",\n            minLength: {\n              value: 8,\n              message: \"비밀번호를 8자 이상 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n          id: \"passwordConfirmation\",\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uD55C \\uBC88 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          error: (_errors$passwordConfi = errors.passwordConfirmation) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message,\n          register: register(\"passwordConfirmation\", {\n            required: \"비밀번호를 다시 한 번 입력해 주세요\",\n            validate: value => value === password || \"비밀번호가 일치하지 않습니다\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          disabled: !isValid,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SocialLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthSwitch, {\n        children: [\"\\uC774\\uBBF8 \\uD68C\\uC6D0\\uC774\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleModal, {\n      isOpen: !!errorMessage,\n      text: errorMessage,\n      onClose: () => setErrorMessage(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SignupPage, \"Sg6lBdpHl8uoQZ3pHLFpk8nleZk=\", false, function () {\n  return [useAuth, useNavigate, useForm];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","Navigate","useNavigate","useForm","AuthContainer","LogoHomeLink","Form","AuthSwitch","SubmitButton","logo","InputItem","SocialLogin","PasswordInput","useAuth","SimpleModal","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupPage","_s","_errors$email","_errors$nickname","_errors$password","_errors$passwordConfi","user","signup","navigate","register","handleSubmit","watch","trigger","formState","errors","isValid","mode","errorMessage","setErrorMessage","onSubmit","data","error","message","password","passwordConfirmation","to","fileName","_jsxFileName","lineNumber","columnNumber","children","href","src","alt","id","label","placeholder","email","required","pattern","value","nickname","minLength","validate","type","disabled","isOpen","text","onClose","_c","$RefreshReg$"],"sources":["/Users/godiswithyou/Downloads/FS-PandaMarket-Template-10-main 2/web/src/pages/auth/SignupPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  AuthContainer,\n  LogoHomeLink,\n  Form,\n  AuthSwitch,\n  SubmitButton,\n} from \"./AuthStyles\";\nimport logo from \"../../assets/images/logo/logo.svg\";\nimport InputItem from \"../../components/UI/InputItem\";\nimport SocialLogin from \"./components/SocialLogin\";\nimport PasswordInput from \"./components/PasswordInput\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport SimpleModal from \"../../components/UI/SimpleModal\";\n\nconst SignupPage = () => {\n  const { user, signup } = useAuth();\n  const navigate = useNavigate();\n  const {\n    register, // 각 입력 필드를 폼에 등록하고 유효성 검사 규칙을 설정하는 함수\n    handleSubmit, // 폼 제출을 처리하는 함수\n    watch, //  폼 필드의 변경을 감지하는 함수\n    trigger, // 폼의 유효성 검사를 트리거하는 함수\n    formState: { errors, isValid }, // 폼의 상태를 나타내는 객체\n  } = useForm({ mode: \"onBlur\" });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onSubmit = async (data) => {\n    try {\n      await signup(data);\n      navigate(\"/items\");\n    } catch (error) {\n      if (error.message) {\n        setErrorMessage(error.message);\n      }\n    }\n  };\n\n  // 실시간으로 입력값을 감지해야 하는 경우, 폼의 현재 상태를 가져오는 getValues보다 watch 함수를 사용하는 것이 더 적합해요.\n  const password = watch(\"password\");\n  const passwordConfirmation = watch(\"passwordConfirmation\");\n\n  // 비밀번호가 변경될 때마다 비밀번호 확인 필드의 유효성을 검사\n  useEffect(() => {\n    if (password && passwordConfirmation) {\n      trigger(\"passwordConfirmation\");\n    }\n  }, [password, passwordConfirmation, trigger]);\n\n  if (user) {\n    return <Navigate to=\"/items\" />;\n  }\n\n  return (\n    <>\n      <AuthContainer>\n        <LogoHomeLink href=\"/\" aria-label=\"홈으로 이동\">\n          <img src={logo} alt=\"판다마켓 로고\" />\n        </LogoHomeLink>\n\n        <Form id=\"signupForm\" onSubmit={handleSubmit(onSubmit)}>\n          <InputItem\n            id=\"email\"\n            label=\"이메일\"\n            placeholder=\"이메일을 입력해 주세요\"\n            error={errors.email?.message}\n            register={register(\"email\", {\n              // required에 boolean 값을 넣어줄 수도 있지만, 대신 오류 메세지 문자열을 넣어놓으면 해당 필드를 필수 항목으로 설정함과 동시에 폼 제출 시 입력값이 없을 경우 해당 메시지가 표시돼요.\n              required: \"이메일을 입력해 주세요\",\n              pattern: {\n                value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/,\n                message: \"잘못된 이메일 형식입니다\",\n              },\n            })}\n          />\n\n          <InputItem\n            id=\"nickname\"\n            label=\"닉네임\"\n            placeholder=\"닉네임을 입력해 주세요\"\n            error={errors.nickname?.message}\n            register={register(\"nickname\", {\n              required: \"닉네임을 입력해 주세요\",\n            })}\n          />\n\n          <PasswordInput\n            id=\"password\"\n            label=\"비밀번호\"\n            placeholder=\"비밀번호를 입력해 주세요\"\n            error={errors.password?.message}\n            register={register(\"password\", {\n              required: \"비밀번호를 입력해 주세요\",\n              minLength: {\n                value: 8,\n                message: \"비밀번호를 8자 이상 입력해 주세요\",\n              },\n            })}\n          />\n\n          <PasswordInput\n            id=\"passwordConfirmation\"\n            label=\"비밀번호 확인\"\n            placeholder=\"비밀번호를 다시 한 번 입력해 주세요\"\n            error={errors.passwordConfirmation?.message}\n            register={register(\"passwordConfirmation\", {\n              required: \"비밀번호를 다시 한 번 입력해 주세요\",\n              validate: (value) =>\n                value === password || \"비밀번호가 일치하지 않습니다\",\n            })}\n          />\n\n          <SubmitButton type=\"submit\" disabled={!isValid}>\n            회원가입\n          </SubmitButton>\n        </Form>\n\n        <SocialLogin />\n\n        <AuthSwitch>\n          이미 회원이신가요? <Link to=\"/login\">로그인</Link>\n        </AuthSwitch>\n      </AuthContainer>\n      <SimpleModal\n        isOpen={!!errorMessage}\n        text={errorMessage}\n        onClose={() => setErrorMessage(\"\")}\n      />\n    </>\n  );\n};\n\nexport default SignupPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}